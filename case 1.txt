-- create database--

CREATE SCHEMA dannys_diner;

-- sales table creation


CREATE TABLE sales (
  customer_id VARCHAR(1),
  order_date DATE,
  product_id INTEGER
);

INSERT INTO sales VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
  
  -- menu table creation


  
  CREATE TABLE menu (
   product_id  INTEGER,
   product_name  VARCHAR(5),
   price    INTEGER
);

INSERT INTO menu
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  
  -- member table creation



  CREATE TABLE members (
  customer_id VARCHAR(1),
  join_date DATE
);

INSERT INTO members

VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  
  SELECT * FROM sales;
  SELECT * FROM menu;
  SELECT * FROM members;




  
  -- Q1. What is the total amount each customer spent at the restaurant?
  
  

  select s.customer_id, sum(m.price) as total_spent
  from sales s
   join menu m on s.product_id = m.product_id 
   group by s.customer_id;
  


-- Q2. How many days has each customer visited the restaurant?
  
  
  select customer_id, count(distinct order_date)
  from sales group by customer_id;


  
  
 -- Q3. What was the first item from the menu purchased by each customer?

 
 with modified as (
select s.*, m.product_name, dense_rank() over(partition by s.customer_id order by s.order_date) rnk
from sales s
join menu m on s.product_id = m.product_id
)
select customer_id, product_name from modified where  rnk = 1
group by customer_id, product_name;



  
 -- Q4. What is the most purchased item on the menu and how many times was it purchased by all customers?


 
  select m.product_name, l.num
  from menu m
  join  (select product_id, count(product_id) as num
				from sales
				group by product_id order by num desc limit 1 ) as l
  on m.product_id = l.product_id;
  
  

  
  -- Q5.Which item was the most popular for each customer?


with fvrt as (
		select s.customer_id, m.product_name, count(s.product_id) no_order ,
		dense_rank() over(partition by customer_id order by count(s.product_id) desc  ) as rnk
		from sales s  
        join menu m on s.product_id = m.product_id
                group by s.customer_id, m.product_name)
select customer_id, product_name, no_order from fvrt where rnk = 1;






-- Q6. Which item was purchased first by the customer after they became a member?


with after_join as (
	select m.customer_id, s.product_id ,m1.product_name, row_number() over(partition by m.customer_id order by s.order_date) rnk
			from members m
			join sales s 
			on 
			m.customer_id = s.customer_id and s.order_date > m.join_date
            join menu m1 on m1.product_id = s.product_id
            )
select customer_id, product_name from after_join where rnk = 1;





-- Q7. Which item was purchased just before the customer became a member?


with before_join as (
	select m.customer_id, s.product_id ,m1.product_name, s.order_date, row_number() over(partition by m.customer_id order by s.order_date desc) rnk
			from members m
			join sales s 
			on 
			m.customer_id = s.customer_id and s.order_date < m.join_date
            join menu m1 on m1.product_id = s.product_id
            )
select customer_id, product_name from before_join where rnk = 1;


  
-- Q8. What is the total items and amount spent for each member before they became a member?


  with before_join as (
  	select s.* ,m1.product_name, m1.price
			from members m
			join sales s 
			on 
			m.customer_id = s.customer_id and s.order_date < m.join_date
            join menu m1 on m1.product_id = s.product_id
            )
  
  select customer_id, sum(price) as total_spent, count(product_name) from before_join group by customer_id ;
  
  
 -- Q9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


 with point_table as
		 (
		 select *, 
			case 
			when product_id = 1 then price * 20 
			else price * 10 end as points
		 from menu 	
		 )
 select customer_id, sum(p.points)
 from sales s 
 join point_table p on s.product_id = p.product_id
 group by customer_id;




-- Q10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - 
-- how many points do customer A and B have at the end of January
 
 
 
with week_end_table as
			(
			select s.customer_id, mem.join_date, s.order_date,
            date_add(mem.join_date, interval(6) day) as week_end ,
            m.product_name, m.price
			from sales s
			left join members mem  on s.customer_id = mem.customer_id
			left join menu m on s.product_id = m.product_id 
			)
select customer_id, sum( case 
                         when order_date  between join_date and week_end then price * 20
                         else case when product_name = 'sushi' then price * 20
				  else price * 10 end
			 end 
			) as total_points
from week_end_table 
group by customer_id;



-- Bonus question: Recreate the following table output using the available data

select s.customer_id , s.order_date, m.product_name, m.price, 
case when s.customer_id = mem.customer_id then 'Y'
	else 'N' end as member_
from sales s
join menu m on s.product_id = m.product_id
left join members mem on s.customer_id = s.customer_id










